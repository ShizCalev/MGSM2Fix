name: Create Release

on:
  workflow_dispatch:
        
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v4
      
    - name: Extract version from version.h
      id: extract_version
      shell: bash
      run: |
        VERSION_FILE="resource.h"
        echo "Reading version from $VERSION_FILE"

        version_line=$(grep '#define VERSION_STRING' "$VERSION_FILE")
        echo "Found line: $version_line"

        version=$(echo "$version_line" | sed -E 's/#define VERSION_STRING +"([^"]+)"/\1/')
        echo "Parsed version: $version"

        echo "version=$version" >> $GITHUB_OUTPUT

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1
      
    - run: msbuild MGSM2Fix.sln -t:rebuild -verbosity:diag -property:Configuration=Release -property:Platform=x64
    - run: msbuild MGSM2Fix.sln -t:rebuild -verbosity:diag -property:Configuration=Release -property:Platform=x86
    - run: mkdir .\dist
    - run: cp x64\Release\MGSM2Fix.asi .\dist\MGSM2Fix64.asi
    - run: cp Release\MGSM2Fix.asi .\dist\MGSM2Fix32.asi

    - uses: robinraju/release-downloader@v1.8
      with:
        repository: "ThirteenAG/Ultimate-ASI-Loader"
        latest: true
        fileName: "Ultimate-ASI-Loader_x64.zip"
    - run: unzip Ultimate-ASI-Loader_x64.zip -d .\dist
    - run: mv .\dist\dinput8.dll .\dist\d3d11.dll
    
    - uses: robinraju/release-downloader@v1.8
      with:
        repository: "ThirteenAG/Ultimate-ASI-Loader"
        latest: true
        fileName: "Ultimate-ASI-Loader.zip"
    - run: unzip Ultimate-ASI-Loader.zip -d .\dist
    
    
    - run: cp .\README.md .\dist\MGSM2Fix_Readme.md
    - run: cp .\MGSM2Fix.ini .\dist\MGSM2Fix.ini
    - run: 7z a -tzip MGSM2Fix_${{ github.event.inputs.version }}.zip .\dist\* .\res\*
    
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "MGSM2Fix_${{ steps.extract_version.outputs.version }}.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.extract_version.outputs.version }}
        name: "${{ steps.extract_version.outputs.version }}"
        draft: true
        generateReleaseNotes: true
        artifactErrorsFailBuild: true

